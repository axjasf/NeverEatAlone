name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Test
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Backend setup and tests
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install -r backend/requirements-dev.txt

      - name: Run Python tests with coverage
        run: |
          cd backend
          python -m pytest --cov=app --cov-report=xml --cov-report=term-missing --junitxml=pytest-report.xml

      # Frontend setup and tests
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Node.js dependencies
        working-directory: ./frontend
        run: |
          npm ci
          npm install -g typescript

      - name: Create src directory if it doesn't exist
        working-directory: ./frontend
        run: mkdir -p src

      - name: Type check
        working-directory: ./frontend
        run: |
          # Create a dummy file if src is empty to prevent tsc error
          if [ ! "$(ls -A src)" ]; then
            echo "// TODO: Add your code here" > src/index.ts
          fi
          npm run type-check

      - name: Run TypeScript tests with coverage
        working-directory: ./frontend
        run: npm run test -- --coverage --coverageReporters=lcov --coverageReporters=text-summary --passWithNoTests

      # SonarQube analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}
            -Dsonar.organization=${{ github.repository_owner }}

      # Upload test results
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            backend/coverage.xml
            backend/pytest-report.xml
            frontend/coverage/lcov.info
